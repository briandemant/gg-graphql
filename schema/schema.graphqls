enum TransactionType {
	SELL
	BUY
	GIVEAWAY
	OTHER
	RENT_OUT
	TO_RENT
	UNKNOWN
}

enum ImageSizeType {
	ORIGINAL
	HUGE
	BIG
	NORMAL
	SMALL
}

type Category {
	id: Int!
	title: String!
	level: Int!
	title_slug: String!
	slug: String!
	count: Int!
	parent: Category
	parents: [Category!]
	children(with_count: Boolean): [Category]
	can_create: Boolean
}

type Listing {
	id: Int!
	title: String!
	description: String!
	price: Int!
	transaction_type: TransactionType!
	user: User!
	category: Category!
	images(size: ImageSizeType): [Image!]
	phone: String!
	address: String
	zipcode: String
	city: String
	country: String
	extra: ListingExtra
}

type ListingExtra {
	related(limit:Int): [Listing!]
}

type ListingList {
	count: Int!
	results: [Listing!]
}

type User {
	id: Int!
	username: String!
	phone: String!
	has_nemid: Boolean
	avatar(size: ImageSizeType): Image
	extra: UserExtra
}

type UserExtra {
	listings(limit:Int): [Listing!]
}

type Image {
	id: Int!
	url: String!
	size: ImageSizeType
	width: Int!
	height: Int!
}

type Query {
	# lookup one category
	category(id: Int!): Category
	category_roots: [Category]
	# --
	listing(id: Int!): Listing
	listing_latest(category: Int, limit: Int): ListingList
	listing_search(
		query: String
		category: Int
		user: Int
		limit: Int
	): ListingList
	# --
	user(id: Int!): User
	# --
	image(id: Int!, size: ImageSizeType): Image
	# --
	errors: [String]
}
