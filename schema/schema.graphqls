enum TransactionType {
	SELL
	BUY
	GIVEAWAY
	OTHER
	RENT_OUT
	TO_RENT
	UNKNOWN
}

enum ImageSizeType {
	ORIGINAL
	HUGE
	BIG
	NORMAL
	SMALL
}

# The Category model
type Category {
	id: Int!
	title: String!
	level: Int!
	title_slug: String!
	slug: String!
	count: Int!
	parent: Category
	parents: [Category!]
	children(with_count: Boolean): [Category]
	can_create: Boolean
}

# The Listing model
type Listing {
	id: Int!
	title: String!
	description: String!
	price: Int!
	transaction_type: TransactionType!
	user: User!
	createdAt: String!
	category: Category!
	images(size: ImageSizeType): [Image!]
	image(size: ImageSizeType): Image
	phone: String!
	address: String
	zipcode: String
	city: String
	country: String

	# related listings for a listing
	related(limit:Int): [Listing!]
}

# list of listings
type ListingList {
	# how many listings was found
	count: Int!
	# a list of results (Listings)
	results: [Listing!]
}

type User {
	id: Int!
	username: String!
	phone: String!
	has_nemid: Boolean
	avatar(size: ImageSizeType): Image

	# Other listings by this user
	listings(limit:Int): [Listing!]
}


type Image {
	id: Int!
	url: String!
	size: ImageSizeType
	width: Int!
	height: Int!
}

type Query {
	# lookup one category
	category(id: Int!): Category

	# list the category roots
	category_roots: [Category]


	# lookup one listing
	listing(id: Int!): Listing

	#  list the latest listings
	listing_latest(category: Int, limit: Int): ListingList

	#  list the listings for the frontpage
	listing_front(limit: Int): ListingList

	#  search for listings
	listing_search(query: String,category: Int, user: Int, limit: Int): ListingList

	# get info about the user
	user(id: Int!): User

	# get info about an image
	image(id: Int!, size: ImageSizeType): Image
}
